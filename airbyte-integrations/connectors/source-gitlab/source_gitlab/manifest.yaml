version: 0.58.8
type: DeclarativeSource

definitions:
  # Authenticators
  bearer_authenticator:
    type: BearerAuthenticator
    api_token: "{{ config['credentials']['access_token'] }}"
  # TODO: oauth doesn't work
  oauth_authenticator:
    type: OAuthAuthenticator
    client_id: "{{ config['credentials']['client_id'] }}"
    client_secret: "{{ config['credentials']['client_secret'] }}"
    refresh_token: "{{ config['credentials']['refresh_token'] }}"
    token_refresh_endpoint: "https://{{ config.get('api_url', 'gitlab.com') }}/oauth/token"
  authenticator:
    type: SelectiveAuthenticator
    authenticator_selection_path: ["credentials", "auth_type"]
    authenticators:
      oauth2.0: "#/definitions/oauth_authenticator"
      access_token: "#/definitions/bearer_authenticator"

  # Requester
  requester:
    type: HttpRequester
    url_base: >-
      {% set parts = config.get('api_url', 'gitlab.com').split('://') %}
      {{ parts[0] if parts|length > 1 else 'https' }}://{{ parts[1] if parts[1] else parts[0] }}/api/v4/
    http_method: GET
    authenticator: "#/definitions/authenticator"

  # Selector
  selector:
    type: RecordSelector
    extractor:
      type: DpathExtractor
      field_path: []

  # Paginator
  paginator:
    type: DefaultPaginator
    pagination_strategy:
      type: PageIncrement
      page_size: 50
      start_from_page: 1
      inject_on_first_request: true
    page_size_option:
      type: RequestOption
      field_name: per_page
      inject_into: request_parameter
    page_token_option:
      type: RequestOption
      field_name: page
      inject_into: request_parameter

  # Retrievers
  retriever:
    type: SimpleRetriever
    record_selector: "#/definitions/selector"
    requester: "#/definitions/requester"
    paginator: "#/definitions/paginator"

  group_child_streams_retriever:
    $ref: "#/definitions/retriever"
    partition_router:
      type: SubstreamPartitionRouter
      parent_stream_configs:
        - type: ParentStreamConfig
          parent_key: "id"
          stream: "#/definitions/groups_list_stream"
          partition_field: "id"

  # Service streams
  base_full_refresh_stream:
    type: DeclarativeStream
    primary_key: "id"

  groups_list_stream:
    name: "groups_list"
    $ref: "#/definitions/base_full_refresh_stream"
    retriever: "#/definitions/retriever"
    $parameters:
      path: "groups"

  # Full refresh streams
  groups_stream:
    name: "groups"
    $ref: "#/definitions/base_full_refresh_stream"
    retriever:
      $ref: "#/definitions/retriever"
      partition_router:
        type: SubstreamPartitionRouter
        parent_stream_configs:
          - type: ParentStreamConfig
            parent_key: "id"
            # TODO: check _get_group_list in source.py
            stream: "#/definitions/groups_list_stream"
            partition_field: "id"
    transformations:
      - type: AddFields
        fields:
          - type: AddedFieldDefinition
            path:
              - projects
            value: >-
              {% set projects = [] %}
              {% for project in record.get('projects', []): %}
              {% set _ = projects.append({'id': project['id'], 'path_with_namespace': project['path_with_namespace']}) %}
              {% endfor %}
              {{ projects }}
    $parameters:
      path: "groups/{{ stream_slice.id }}"

  group_milestones_stream:
    name: "group_milestones"
    $ref: "#/definitions/base_full_refresh_stream"
    retriever: "#/definitions/group_child_streams_retriever"
    $parameters:
      path: "groups/{{ stream_slice.id }}/milestones"

  group_members_stream:
    name: "group_members"
    $ref: "#/definitions/base_full_refresh_stream"
    retriever: "#/definitions/group_child_streams_retriever"
    $parameters:
      path: "groups/{{ stream_slice.id }}/members"

  group_labels_stream:
    name: "group_labels"
    $ref: "#/definitions/base_full_refresh_stream"
    retriever: "#/definitions/group_child_streams_retriever"
    $parameters:
      path: "groups/{{ stream_slice.id }}/labels"

  group_issue_boards_stream:
    name: "group_issue_boards"
    $ref: "#/definitions/base_full_refresh_stream"
    retriever: "#/definitions/group_child_streams_retriever"
    $parameters:
      path: "groups/{{ stream_slice.id }}/boards"

streams:
  - "#/definitions/groups_stream"
  - "#/definitions/group_milestones_stream"
  - "#/definitions/group_members_stream"
  - "#/definitions/group_labels_stream"
  - "#/definitions/group_issue_boards_stream"

check:
  # TODO: does not match the reality
  type: CheckStream
  stream_names:
    - groups
